//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ll.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace ll {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="llParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public interface IllVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="llParser.compileUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompileUnit([NotNull] llParser.CompileUnitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="llParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] llParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="llParser.compositUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompositUnit([NotNull] llParser.CompositUnitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="llParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLine([NotNull] llParser.LineContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>lessOperator</c>
	/// labeled alternative in <see cref="llParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLessOperator([NotNull] llParser.LessOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>orOperator</c>
	/// labeled alternative in <see cref="llParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOrOperator([NotNull] llParser.OrOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>binOpAddSub</c>
	/// labeled alternative in <see cref="llParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinOpAddSub([NotNull] llParser.BinOpAddSubContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>notEqualOperator</c>
	/// labeled alternative in <see cref="llParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotEqualOperator([NotNull] llParser.NotEqualOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>unaryExpr</c>
	/// labeled alternative in <see cref="llParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryExpr([NotNull] llParser.UnaryExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>binOpMultDiv</c>
	/// labeled alternative in <see cref="llParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinOpMultDiv([NotNull] llParser.BinOpMultDivContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>parenthes</c>
	/// labeled alternative in <see cref="llParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthes([NotNull] llParser.ParenthesContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>greaterOperator</c>
	/// labeled alternative in <see cref="llParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGreaterOperator([NotNull] llParser.GreaterOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>equalityOpertor</c>
	/// labeled alternative in <see cref="llParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqualityOpertor([NotNull] llParser.EqualityOpertorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>andOperator</c>
	/// labeled alternative in <see cref="llParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAndOperator([NotNull] llParser.AndOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>assignStatement</c>
	/// labeled alternative in <see cref="llParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignStatement([NotNull] llParser.AssignStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>assignArrayField</c>
	/// labeled alternative in <see cref="llParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignArrayField([NotNull] llParser.AssignArrayFieldContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>addAssignStatement</c>
	/// labeled alternative in <see cref="llParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddAssignStatement([NotNull] llParser.AddAssignStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>subAssignStatement</c>
	/// labeled alternative in <see cref="llParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubAssignStatement([NotNull] llParser.SubAssignStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>multAssignStatement</c>
	/// labeled alternative in <see cref="llParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultAssignStatement([NotNull] llParser.MultAssignStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>divAssignStatement</c>
	/// labeled alternative in <see cref="llParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDivAssignStatement([NotNull] llParser.DivAssignStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>instantiationStatement</c>
	/// labeled alternative in <see cref="llParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInstantiationStatement([NotNull] llParser.InstantiationStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>initializationStatement</c>
	/// labeled alternative in <see cref="llParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInitializationStatement([NotNull] llParser.InitializationStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>destructionStatement</c>
	/// labeled alternative in <see cref="llParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDestructionStatement([NotNull] llParser.DestructionStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>returnStatement</c>
	/// labeled alternative in <see cref="llParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] llParser.ReturnStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ifStatement</c>
	/// labeled alternative in <see cref="llParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] llParser.IfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>whileStatement</c>
	/// labeled alternative in <see cref="llParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] llParser.WhileStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>printStatement</c>
	/// labeled alternative in <see cref="llParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrintStatement([NotNull] llParser.PrintStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="llParser.unaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryExpression([NotNull] llParser.UnaryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="llParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCall([NotNull] llParser.FunctionCallContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="llParser.functionDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDefinition([NotNull] llParser.FunctionDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="llParser.variableExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableExpression([NotNull] llParser.VariableExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>doubleAtomExpression</c>
	/// labeled alternative in <see cref="llParser.numericExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDoubleAtomExpression([NotNull] llParser.DoubleAtomExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>integerAtomExpression</c>
	/// labeled alternative in <see cref="llParser.numericExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntegerAtomExpression([NotNull] llParser.IntegerAtomExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="llParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolExpression([NotNull] llParser.BoolExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="llParser.blockStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlockStatement([NotNull] llParser.BlockStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="llParser.typeDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeDefinition([NotNull] llParser.TypeDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="llParser.incrementPostExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIncrementPostExpression([NotNull] llParser.IncrementPostExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="llParser.decrementPostExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecrementPostExpression([NotNull] llParser.DecrementPostExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="llParser.incrementPreExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIncrementPreExpression([NotNull] llParser.IncrementPreExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="llParser.decrementPreExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecrementPreExpression([NotNull] llParser.DecrementPreExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="llParser.notExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotExpression([NotNull] llParser.NotExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>intArrayType</c>
	/// labeled alternative in <see cref="llParser.arrayTypes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntArrayType([NotNull] llParser.IntArrayTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>doubleArrayType</c>
	/// labeled alternative in <see cref="llParser.arrayTypes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDoubleArrayType([NotNull] llParser.DoubleArrayTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>boolArrayType</c>
	/// labeled alternative in <see cref="llParser.arrayTypes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolArrayType([NotNull] llParser.BoolArrayTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>intArrayCreation</c>
	/// labeled alternative in <see cref="llParser.arrayCreation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntArrayCreation([NotNull] llParser.IntArrayCreationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>doubleArrayCreation</c>
	/// labeled alternative in <see cref="llParser.arrayCreation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDoubleArrayCreation([NotNull] llParser.DoubleArrayCreationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>boolArrayCreation</c>
	/// labeled alternative in <see cref="llParser.arrayCreation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolArrayCreation([NotNull] llParser.BoolArrayCreationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="llParser.refTypeCreation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRefTypeCreation([NotNull] llParser.RefTypeCreationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="llParser.arrayIndexing"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayIndexing([NotNull] llParser.ArrayIndexingContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="llParser.refTypeDestruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRefTypeDestruction([NotNull] llParser.RefTypeDestructionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="llParser.structProperties"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructProperties([NotNull] llParser.StructPropertiesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="llParser.structDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructDefinition([NotNull] llParser.StructDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="llParser.structName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructName([NotNull] llParser.StructNameContext context);
}
} // namespace ll
