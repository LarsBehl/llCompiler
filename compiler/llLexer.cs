//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ll.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace ll {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public partial class llLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		DOUBLE_LITERAL=1, INTEGER_LITERAL=2, RETURN=3, INT_TYPE=4, DOUBLE_TYPE=5, 
		BOOL_TYPE=6, VOID_TYPE=7, BOOL_TRUE=8, BOOL_FALSE=9, IF=10, ELSE=11, WHILE=12, 
		PRINT=13, NEW=14, DESTROY=15, NULL=16, STRUCT=17, WORD=18, MULT=19, PLUS=20, 
		MINUS=21, DIV=22, DOT=23, PAR_L=24, PAR_R=25, ASSIGN=26, CURL_L=27, CURL_R=28, 
		BRAC_L=29, BRAC_R=30, SEMCOL=31, EQUAL=32, ADD_ASSIGN=33, SUB_ASSIGN=34, 
		MULT_ASSIGN=35, DIV_ASSIGN=36, LESS=37, GREATER=38, COLON=39, COMMA=40, 
		NOT=41, AND=42, OR=43, NOT_EQUAL=44, WHITESPACE=45;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"DOUBLE_LITERAL", "INTEGER_LITERAL", "RETURN", "INT_TYPE", "DOUBLE_TYPE", 
		"BOOL_TYPE", "VOID_TYPE", "BOOL_TRUE", "BOOL_FALSE", "IF", "ELSE", "WHILE", 
		"PRINT", "NEW", "DESTROY", "NULL", "STRUCT", "WORD", "MULT", "PLUS", "MINUS", 
		"DIV", "DOT", "PAR_L", "PAR_R", "ASSIGN", "CURL_L", "CURL_R", "BRAC_L", 
		"BRAC_R", "SEMCOL", "EQUAL", "ADD_ASSIGN", "SUB_ASSIGN", "MULT_ASSIGN", 
		"DIV_ASSIGN", "LESS", "GREATER", "COLON", "COMMA", "NOT", "AND", "OR", 
		"NOT_EQUAL", "WHITESPACE"
	};


	public llLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public llLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, "'*'", "'+'", "'-'", "'/'", 
		"'.'", "'('", "')'", "'='", "'{'", "'}'", "'['", "']'", "';'", null, null, 
		null, null, null, "'<'", "'>'", "':'", "','", "'!'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "DOUBLE_LITERAL", "INTEGER_LITERAL", "RETURN", "INT_TYPE", "DOUBLE_TYPE", 
		"BOOL_TYPE", "VOID_TYPE", "BOOL_TRUE", "BOOL_FALSE", "IF", "ELSE", "WHILE", 
		"PRINT", "NEW", "DESTROY", "NULL", "STRUCT", "WORD", "MULT", "PLUS", "MINUS", 
		"DIV", "DOT", "PAR_L", "PAR_R", "ASSIGN", "CURL_L", "CURL_R", "BRAC_L", 
		"BRAC_R", "SEMCOL", "EQUAL", "ADD_ASSIGN", "SUB_ASSIGN", "MULT_ASSIGN", 
		"DIV_ASSIGN", "LESS", "GREATER", "COLON", "COMMA", "NOT", "AND", "OR", 
		"NOT_EQUAL", "WHITESPACE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "ll.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static llLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '/', '\x109', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', '\x1A', '\x4', 
		'\x1B', '\t', '\x1B', '\x4', '\x1C', '\t', '\x1C', '\x4', '\x1D', '\t', 
		'\x1D', '\x4', '\x1E', '\t', '\x1E', '\x4', '\x1F', '\t', '\x1F', '\x4', 
		' ', '\t', ' ', '\x4', '!', '\t', '!', '\x4', '\"', '\t', '\"', '\x4', 
		'#', '\t', '#', '\x4', '$', '\t', '$', '\x4', '%', '\t', '%', '\x4', '&', 
		'\t', '&', '\x4', '\'', '\t', '\'', '\x4', '(', '\t', '(', '\x4', ')', 
		'\t', ')', '\x4', '*', '\t', '*', '\x4', '+', '\t', '+', '\x4', ',', '\t', 
		',', '\x4', '-', '\t', '-', '\x4', '.', '\t', '.', '\x3', '\x2', '\x6', 
		'\x2', '_', '\n', '\x2', '\r', '\x2', '\xE', '\x2', '`', '\x3', '\x2', 
		'\x3', '\x2', '\x6', '\x2', '\x65', '\n', '\x2', '\r', '\x2', '\xE', '\x2', 
		'\x66', '\x3', '\x3', '\x6', '\x3', 'j', '\n', '\x3', '\r', '\x3', '\xE', 
		'\x3', 'k', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', 
		'\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', 
		'\b', '\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\t', 
		'\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', 
		'\n', '\x3', '\n', '\x3', '\n', '\x3', '\v', '\x3', '\v', '\x3', '\v', 
		'\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', 
		'\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', 
		'\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', 
		'\x3', '\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', 
		'\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', 
		'\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x11', '\x3', '\x11', 
		'\x3', '\x11', '\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', 
		'\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', 
		'\x3', '\x13', '\x5', '\x13', '\xC2', '\n', '\x13', '\x3', '\x13', '\a', 
		'\x13', '\xC5', '\n', '\x13', '\f', '\x13', '\xE', '\x13', '\xC8', '\v', 
		'\x13', '\x3', '\x14', '\x3', '\x14', '\x3', '\x15', '\x3', '\x15', '\x3', 
		'\x16', '\x3', '\x16', '\x3', '\x17', '\x3', '\x17', '\x3', '\x18', '\x3', 
		'\x18', '\x3', '\x19', '\x3', '\x19', '\x3', '\x1A', '\x3', '\x1A', '\x3', 
		'\x1B', '\x3', '\x1B', '\x3', '\x1C', '\x3', '\x1C', '\x3', '\x1D', '\x3', 
		'\x1D', '\x3', '\x1E', '\x3', '\x1E', '\x3', '\x1F', '\x3', '\x1F', '\x3', 
		' ', '\x3', ' ', '\x3', '!', '\x3', '!', '\x3', '!', '\x3', '\"', '\x3', 
		'\"', '\x3', '\"', '\x3', '#', '\x3', '#', '\x3', '#', '\x3', '$', '\x3', 
		'$', '\x3', '$', '\x3', '%', '\x3', '%', '\x3', '%', '\x3', '&', '\x3', 
		'&', '\x3', '\'', '\x3', '\'', '\x3', '(', '\x3', '(', '\x3', ')', '\x3', 
		')', '\x3', '*', '\x3', '*', '\x3', '+', '\x3', '+', '\x3', '+', '\x3', 
		',', '\x3', ',', '\x3', ',', '\x3', '-', '\x3', '-', '\x3', '-', '\x3', 
		'.', '\x3', '.', '\x3', '.', '\x3', '.', '\x2', '\x2', '/', '\x3', '\x3', 
		'\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', 
		'\t', '\x11', '\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', 
		'\xE', '\x1B', '\xF', '\x1D', '\x10', '\x1F', '\x11', '!', '\x12', '#', 
		'\x13', '%', '\x14', '\'', '\x15', ')', '\x16', '+', '\x17', '-', '\x18', 
		'/', '\x19', '\x31', '\x1A', '\x33', '\x1B', '\x35', '\x1C', '\x37', '\x1D', 
		'\x39', '\x1E', ';', '\x1F', '=', ' ', '?', '!', '\x41', '\"', '\x43', 
		'#', '\x45', '$', 'G', '%', 'I', '&', 'K', '\'', 'M', '(', 'O', ')', 'Q', 
		'*', 'S', '+', 'U', ',', 'W', '-', 'Y', '.', '[', '/', '\x3', '\x2', '\x6', 
		'\x3', '\x2', '\x32', ';', '\x5', '\x2', '\x43', '\\', '\x61', '\x61', 
		'\x63', '|', '\x6', '\x2', '\x32', ';', '\x43', '\\', '\x61', '\x61', 
		'\x63', '|', '\x5', '\x2', '\v', '\f', '\xF', '\xF', '\"', '\"', '\x2', 
		'\x10C', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\x5', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', '!', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', '\x2', '%', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\'', '\x3', '\x2', '\x2', '\x2', '\x2', 
		')', '\x3', '\x2', '\x2', '\x2', '\x2', '+', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '-', '\x3', '\x2', '\x2', '\x2', '\x2', '/', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x31', '\x3', '\x2', '\x2', '\x2', '\x2', '\x33', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x35', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x37', '\x3', '\x2', '\x2', '\x2', '\x2', '\x39', '\x3', '\x2', '\x2', 
		'\x2', '\x2', ';', '\x3', '\x2', '\x2', '\x2', '\x2', '=', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '?', '\x3', '\x2', '\x2', '\x2', '\x2', '\x41', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x43', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x45', '\x3', '\x2', '\x2', '\x2', '\x2', 'G', '\x3', '\x2', '\x2', '\x2', 
		'\x2', 'I', '\x3', '\x2', '\x2', '\x2', '\x2', 'K', '\x3', '\x2', '\x2', 
		'\x2', '\x2', 'M', '\x3', '\x2', '\x2', '\x2', '\x2', 'O', '\x3', '\x2', 
		'\x2', '\x2', '\x2', 'Q', '\x3', '\x2', '\x2', '\x2', '\x2', 'S', '\x3', 
		'\x2', '\x2', '\x2', '\x2', 'U', '\x3', '\x2', '\x2', '\x2', '\x2', 'W', 
		'\x3', '\x2', '\x2', '\x2', '\x2', 'Y', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'[', '\x3', '\x2', '\x2', '\x2', '\x3', '^', '\x3', '\x2', '\x2', '\x2', 
		'\x5', 'i', '\x3', '\x2', '\x2', '\x2', '\a', 'm', '\x3', '\x2', '\x2', 
		'\x2', '\t', 't', '\x3', '\x2', '\x2', '\x2', '\v', 'x', '\x3', '\x2', 
		'\x2', '\x2', '\r', '\x7F', '\x3', '\x2', '\x2', '\x2', '\xF', '\x84', 
		'\x3', '\x2', '\x2', '\x2', '\x11', '\x89', '\x3', '\x2', '\x2', '\x2', 
		'\x13', '\x8E', '\x3', '\x2', '\x2', '\x2', '\x15', '\x94', '\x3', '\x2', 
		'\x2', '\x2', '\x17', '\x97', '\x3', '\x2', '\x2', '\x2', '\x19', '\x9C', 
		'\x3', '\x2', '\x2', '\x2', '\x1B', '\xA2', '\x3', '\x2', '\x2', '\x2', 
		'\x1D', '\xA8', '\x3', '\x2', '\x2', '\x2', '\x1F', '\xAC', '\x3', '\x2', 
		'\x2', '\x2', '!', '\xB4', '\x3', '\x2', '\x2', '\x2', '#', '\xB9', '\x3', 
		'\x2', '\x2', '\x2', '%', '\xC1', '\x3', '\x2', '\x2', '\x2', '\'', '\xC9', 
		'\x3', '\x2', '\x2', '\x2', ')', '\xCB', '\x3', '\x2', '\x2', '\x2', '+', 
		'\xCD', '\x3', '\x2', '\x2', '\x2', '-', '\xCF', '\x3', '\x2', '\x2', 
		'\x2', '/', '\xD1', '\x3', '\x2', '\x2', '\x2', '\x31', '\xD3', '\x3', 
		'\x2', '\x2', '\x2', '\x33', '\xD5', '\x3', '\x2', '\x2', '\x2', '\x35', 
		'\xD7', '\x3', '\x2', '\x2', '\x2', '\x37', '\xD9', '\x3', '\x2', '\x2', 
		'\x2', '\x39', '\xDB', '\x3', '\x2', '\x2', '\x2', ';', '\xDD', '\x3', 
		'\x2', '\x2', '\x2', '=', '\xDF', '\x3', '\x2', '\x2', '\x2', '?', '\xE1', 
		'\x3', '\x2', '\x2', '\x2', '\x41', '\xE3', '\x3', '\x2', '\x2', '\x2', 
		'\x43', '\xE6', '\x3', '\x2', '\x2', '\x2', '\x45', '\xE9', '\x3', '\x2', 
		'\x2', '\x2', 'G', '\xEC', '\x3', '\x2', '\x2', '\x2', 'I', '\xEF', '\x3', 
		'\x2', '\x2', '\x2', 'K', '\xF2', '\x3', '\x2', '\x2', '\x2', 'M', '\xF4', 
		'\x3', '\x2', '\x2', '\x2', 'O', '\xF6', '\x3', '\x2', '\x2', '\x2', 'Q', 
		'\xF8', '\x3', '\x2', '\x2', '\x2', 'S', '\xFA', '\x3', '\x2', '\x2', 
		'\x2', 'U', '\xFC', '\x3', '\x2', '\x2', '\x2', 'W', '\xFF', '\x3', '\x2', 
		'\x2', '\x2', 'Y', '\x102', '\x3', '\x2', '\x2', '\x2', '[', '\x105', 
		'\x3', '\x2', '\x2', '\x2', ']', '_', '\t', '\x2', '\x2', '\x2', '^', 
		']', '\x3', '\x2', '\x2', '\x2', '_', '`', '\x3', '\x2', '\x2', '\x2', 
		'`', '^', '\x3', '\x2', '\x2', '\x2', '`', '\x61', '\x3', '\x2', '\x2', 
		'\x2', '\x61', '\x62', '\x3', '\x2', '\x2', '\x2', '\x62', '\x64', '\x5', 
		'/', '\x18', '\x2', '\x63', '\x65', '\t', '\x2', '\x2', '\x2', '\x64', 
		'\x63', '\x3', '\x2', '\x2', '\x2', '\x65', '\x66', '\x3', '\x2', '\x2', 
		'\x2', '\x66', '\x64', '\x3', '\x2', '\x2', '\x2', '\x66', 'g', '\x3', 
		'\x2', '\x2', '\x2', 'g', '\x4', '\x3', '\x2', '\x2', '\x2', 'h', 'j', 
		'\t', '\x2', '\x2', '\x2', 'i', 'h', '\x3', '\x2', '\x2', '\x2', 'j', 
		'k', '\x3', '\x2', '\x2', '\x2', 'k', 'i', '\x3', '\x2', '\x2', '\x2', 
		'k', 'l', '\x3', '\x2', '\x2', '\x2', 'l', '\x6', '\x3', '\x2', '\x2', 
		'\x2', 'm', 'n', '\a', 't', '\x2', '\x2', 'n', 'o', '\a', 'g', '\x2', 
		'\x2', 'o', 'p', '\a', 'v', '\x2', '\x2', 'p', 'q', '\a', 'w', '\x2', 
		'\x2', 'q', 'r', '\a', 't', '\x2', '\x2', 'r', 's', '\a', 'p', '\x2', 
		'\x2', 's', '\b', '\x3', '\x2', '\x2', '\x2', 't', 'u', '\a', 'k', '\x2', 
		'\x2', 'u', 'v', '\a', 'p', '\x2', '\x2', 'v', 'w', '\a', 'v', '\x2', 
		'\x2', 'w', '\n', '\x3', '\x2', '\x2', '\x2', 'x', 'y', '\a', '\x66', 
		'\x2', '\x2', 'y', 'z', '\a', 'q', '\x2', '\x2', 'z', '{', '\a', 'w', 
		'\x2', '\x2', '{', '|', '\a', '\x64', '\x2', '\x2', '|', '}', '\a', 'n', 
		'\x2', '\x2', '}', '~', '\a', 'g', '\x2', '\x2', '~', '\f', '\x3', '\x2', 
		'\x2', '\x2', '\x7F', '\x80', '\a', '\x64', '\x2', '\x2', '\x80', '\x81', 
		'\a', 'q', '\x2', '\x2', '\x81', '\x82', '\a', 'q', '\x2', '\x2', '\x82', 
		'\x83', '\a', 'n', '\x2', '\x2', '\x83', '\xE', '\x3', '\x2', '\x2', '\x2', 
		'\x84', '\x85', '\a', 'x', '\x2', '\x2', '\x85', '\x86', '\a', 'q', '\x2', 
		'\x2', '\x86', '\x87', '\a', 'k', '\x2', '\x2', '\x87', '\x88', '\a', 
		'\x66', '\x2', '\x2', '\x88', '\x10', '\x3', '\x2', '\x2', '\x2', '\x89', 
		'\x8A', '\a', 'v', '\x2', '\x2', '\x8A', '\x8B', '\a', 't', '\x2', '\x2', 
		'\x8B', '\x8C', '\a', 'w', '\x2', '\x2', '\x8C', '\x8D', '\a', 'g', '\x2', 
		'\x2', '\x8D', '\x12', '\x3', '\x2', '\x2', '\x2', '\x8E', '\x8F', '\a', 
		'h', '\x2', '\x2', '\x8F', '\x90', '\a', '\x63', '\x2', '\x2', '\x90', 
		'\x91', '\a', 'n', '\x2', '\x2', '\x91', '\x92', '\a', 'u', '\x2', '\x2', 
		'\x92', '\x93', '\a', 'g', '\x2', '\x2', '\x93', '\x14', '\x3', '\x2', 
		'\x2', '\x2', '\x94', '\x95', '\a', 'k', '\x2', '\x2', '\x95', '\x96', 
		'\a', 'h', '\x2', '\x2', '\x96', '\x16', '\x3', '\x2', '\x2', '\x2', '\x97', 
		'\x98', '\a', 'g', '\x2', '\x2', '\x98', '\x99', '\a', 'n', '\x2', '\x2', 
		'\x99', '\x9A', '\a', 'u', '\x2', '\x2', '\x9A', '\x9B', '\a', 'g', '\x2', 
		'\x2', '\x9B', '\x18', '\x3', '\x2', '\x2', '\x2', '\x9C', '\x9D', '\a', 
		'y', '\x2', '\x2', '\x9D', '\x9E', '\a', 'j', '\x2', '\x2', '\x9E', '\x9F', 
		'\a', 'k', '\x2', '\x2', '\x9F', '\xA0', '\a', 'n', '\x2', '\x2', '\xA0', 
		'\xA1', '\a', 'g', '\x2', '\x2', '\xA1', '\x1A', '\x3', '\x2', '\x2', 
		'\x2', '\xA2', '\xA3', '\a', 'r', '\x2', '\x2', '\xA3', '\xA4', '\a', 
		't', '\x2', '\x2', '\xA4', '\xA5', '\a', 'k', '\x2', '\x2', '\xA5', '\xA6', 
		'\a', 'p', '\x2', '\x2', '\xA6', '\xA7', '\a', 'v', '\x2', '\x2', '\xA7', 
		'\x1C', '\x3', '\x2', '\x2', '\x2', '\xA8', '\xA9', '\a', 'p', '\x2', 
		'\x2', '\xA9', '\xAA', '\a', 'g', '\x2', '\x2', '\xAA', '\xAB', '\a', 
		'y', '\x2', '\x2', '\xAB', '\x1E', '\x3', '\x2', '\x2', '\x2', '\xAC', 
		'\xAD', '\a', '\x66', '\x2', '\x2', '\xAD', '\xAE', '\a', 'g', '\x2', 
		'\x2', '\xAE', '\xAF', '\a', 'u', '\x2', '\x2', '\xAF', '\xB0', '\a', 
		'v', '\x2', '\x2', '\xB0', '\xB1', '\a', 't', '\x2', '\x2', '\xB1', '\xB2', 
		'\a', 'q', '\x2', '\x2', '\xB2', '\xB3', '\a', '{', '\x2', '\x2', '\xB3', 
		' ', '\x3', '\x2', '\x2', '\x2', '\xB4', '\xB5', '\a', 'p', '\x2', '\x2', 
		'\xB5', '\xB6', '\a', 'w', '\x2', '\x2', '\xB6', '\xB7', '\a', 'n', '\x2', 
		'\x2', '\xB7', '\xB8', '\a', 'n', '\x2', '\x2', '\xB8', '\"', '\x3', '\x2', 
		'\x2', '\x2', '\xB9', '\xBA', '\a', 'u', '\x2', '\x2', '\xBA', '\xBB', 
		'\a', 'v', '\x2', '\x2', '\xBB', '\xBC', '\a', 't', '\x2', '\x2', '\xBC', 
		'\xBD', '\a', 'w', '\x2', '\x2', '\xBD', '\xBE', '\a', '\x65', '\x2', 
		'\x2', '\xBE', '\xBF', '\a', 'v', '\x2', '\x2', '\xBF', '$', '\x3', '\x2', 
		'\x2', '\x2', '\xC0', '\xC2', '\t', '\x3', '\x2', '\x2', '\xC1', '\xC0', 
		'\x3', '\x2', '\x2', '\x2', '\xC2', '\xC6', '\x3', '\x2', '\x2', '\x2', 
		'\xC3', '\xC5', '\t', '\x4', '\x2', '\x2', '\xC4', '\xC3', '\x3', '\x2', 
		'\x2', '\x2', '\xC5', '\xC8', '\x3', '\x2', '\x2', '\x2', '\xC6', '\xC4', 
		'\x3', '\x2', '\x2', '\x2', '\xC6', '\xC7', '\x3', '\x2', '\x2', '\x2', 
		'\xC7', '&', '\x3', '\x2', '\x2', '\x2', '\xC8', '\xC6', '\x3', '\x2', 
		'\x2', '\x2', '\xC9', '\xCA', '\a', ',', '\x2', '\x2', '\xCA', '(', '\x3', 
		'\x2', '\x2', '\x2', '\xCB', '\xCC', '\a', '-', '\x2', '\x2', '\xCC', 
		'*', '\x3', '\x2', '\x2', '\x2', '\xCD', '\xCE', '\a', '/', '\x2', '\x2', 
		'\xCE', ',', '\x3', '\x2', '\x2', '\x2', '\xCF', '\xD0', '\a', '\x31', 
		'\x2', '\x2', '\xD0', '.', '\x3', '\x2', '\x2', '\x2', '\xD1', '\xD2', 
		'\a', '\x30', '\x2', '\x2', '\xD2', '\x30', '\x3', '\x2', '\x2', '\x2', 
		'\xD3', '\xD4', '\a', '*', '\x2', '\x2', '\xD4', '\x32', '\x3', '\x2', 
		'\x2', '\x2', '\xD5', '\xD6', '\a', '+', '\x2', '\x2', '\xD6', '\x34', 
		'\x3', '\x2', '\x2', '\x2', '\xD7', '\xD8', '\a', '?', '\x2', '\x2', '\xD8', 
		'\x36', '\x3', '\x2', '\x2', '\x2', '\xD9', '\xDA', '\a', '}', '\x2', 
		'\x2', '\xDA', '\x38', '\x3', '\x2', '\x2', '\x2', '\xDB', '\xDC', '\a', 
		'\x7F', '\x2', '\x2', '\xDC', ':', '\x3', '\x2', '\x2', '\x2', '\xDD', 
		'\xDE', '\a', ']', '\x2', '\x2', '\xDE', '<', '\x3', '\x2', '\x2', '\x2', 
		'\xDF', '\xE0', '\a', '_', '\x2', '\x2', '\xE0', '>', '\x3', '\x2', '\x2', 
		'\x2', '\xE1', '\xE2', '\a', '=', '\x2', '\x2', '\xE2', '@', '\x3', '\x2', 
		'\x2', '\x2', '\xE3', '\xE4', '\a', '?', '\x2', '\x2', '\xE4', '\xE5', 
		'\a', '?', '\x2', '\x2', '\xE5', '\x42', '\x3', '\x2', '\x2', '\x2', '\xE6', 
		'\xE7', '\a', '-', '\x2', '\x2', '\xE7', '\xE8', '\a', '?', '\x2', '\x2', 
		'\xE8', '\x44', '\x3', '\x2', '\x2', '\x2', '\xE9', '\xEA', '\a', '/', 
		'\x2', '\x2', '\xEA', '\xEB', '\a', '?', '\x2', '\x2', '\xEB', '\x46', 
		'\x3', '\x2', '\x2', '\x2', '\xEC', '\xED', '\a', ',', '\x2', '\x2', '\xED', 
		'\xEE', '\a', '?', '\x2', '\x2', '\xEE', 'H', '\x3', '\x2', '\x2', '\x2', 
		'\xEF', '\xF0', '\a', '\x31', '\x2', '\x2', '\xF0', '\xF1', '\a', '?', 
		'\x2', '\x2', '\xF1', 'J', '\x3', '\x2', '\x2', '\x2', '\xF2', '\xF3', 
		'\a', '>', '\x2', '\x2', '\xF3', 'L', '\x3', '\x2', '\x2', '\x2', '\xF4', 
		'\xF5', '\a', '@', '\x2', '\x2', '\xF5', 'N', '\x3', '\x2', '\x2', '\x2', 
		'\xF6', '\xF7', '\a', '<', '\x2', '\x2', '\xF7', 'P', '\x3', '\x2', '\x2', 
		'\x2', '\xF8', '\xF9', '\a', '.', '\x2', '\x2', '\xF9', 'R', '\x3', '\x2', 
		'\x2', '\x2', '\xFA', '\xFB', '\a', '#', '\x2', '\x2', '\xFB', 'T', '\x3', 
		'\x2', '\x2', '\x2', '\xFC', '\xFD', '\a', '(', '\x2', '\x2', '\xFD', 
		'\xFE', '\a', '(', '\x2', '\x2', '\xFE', 'V', '\x3', '\x2', '\x2', '\x2', 
		'\xFF', '\x100', '\a', '~', '\x2', '\x2', '\x100', '\x101', '\a', '~', 
		'\x2', '\x2', '\x101', 'X', '\x3', '\x2', '\x2', '\x2', '\x102', '\x103', 
		'\a', '#', '\x2', '\x2', '\x103', '\x104', '\a', '?', '\x2', '\x2', '\x104', 
		'Z', '\x3', '\x2', '\x2', '\x2', '\x105', '\x106', '\t', '\x5', '\x2', 
		'\x2', '\x106', '\x107', '\x3', '\x2', '\x2', '\x2', '\x107', '\x108', 
		'\b', '.', '\x2', '\x2', '\x108', '\\', '\x3', '\x2', '\x2', '\x2', '\t', 
		'\x2', '`', '\x66', 'k', '\xC1', '\xC4', '\xC6', '\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace ll
