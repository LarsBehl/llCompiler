//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ll.g4 by ANTLR 4.9.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace LL {
#pragma warning disable 3021
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.1")]
[System.CLSCompliant(false)]
public partial class llLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		DOUBLE_LITERAL=1, INTEGER_LITERAL=2, CHAR_LITERAL=3, RETURN=4, INT_TYPE=5, 
		DOUBLE_TYPE=6, BOOL_TYPE=7, VOID_TYPE=8, CHAR_TYPE=9, BOOL_TRUE=10, BOOL_FALSE=11, 
		IF=12, ELSE=13, WHILE=14, PRINT=15, NEW=16, DESTROY=17, NULL=18, STRUCT=19, 
		LOAD=20, GLOBAL=21, WORD=22, MOD=23, MULT=24, PLUS=25, MINUS=26, DIV=27, 
		DOT=28, PAR_L=29, PAR_R=30, ASSIGN=31, CURL_L=32, CURL_R=33, BRAC_L=34, 
		BRAC_R=35, SEMCOL=36, EQUAL=37, ADD_ASSIGN=38, SUB_ASSIGN=39, MULT_ASSIGN=40, 
		DIV_ASSIGN=41, LESS=42, GREATER=43, COLON=44, COMMA=45, NOT=46, AND=47, 
		OR=48, NOT_EQUAL=49, APOSTROPHE=50, WHITESPACE=51;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"DOUBLE_LITERAL", "INTEGER_LITERAL", "CHAR_LITERAL", "RETURN", "INT_TYPE", 
		"DOUBLE_TYPE", "BOOL_TYPE", "VOID_TYPE", "CHAR_TYPE", "BOOL_TRUE", "BOOL_FALSE", 
		"IF", "ELSE", "WHILE", "PRINT", "NEW", "DESTROY", "NULL", "STRUCT", "LOAD", 
		"GLOBAL", "WORD", "MOD", "MULT", "PLUS", "MINUS", "DIV", "DOT", "PAR_L", 
		"PAR_R", "ASSIGN", "CURL_L", "CURL_R", "BRAC_L", "BRAC_R", "SEMCOL", "EQUAL", 
		"ADD_ASSIGN", "SUB_ASSIGN", "MULT_ASSIGN", "DIV_ASSIGN", "LESS", "GREATER", 
		"COLON", "COMMA", "NOT", "AND", "OR", "NOT_EQUAL", "APOSTROPHE", "WHITESPACE"
	};


	public llLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public llLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, "'%'", 
		"'*'", "'+'", "'-'", "'/'", "'.'", "'('", "')'", "'='", "'{'", "'}'", 
		"'['", "']'", "';'", null, null, null, null, null, "'<'", "'>'", "':'", 
		"','", "'!'", null, null, null, "'''"
	};
	private static readonly string[] _SymbolicNames = {
		null, "DOUBLE_LITERAL", "INTEGER_LITERAL", "CHAR_LITERAL", "RETURN", "INT_TYPE", 
		"DOUBLE_TYPE", "BOOL_TYPE", "VOID_TYPE", "CHAR_TYPE", "BOOL_TRUE", "BOOL_FALSE", 
		"IF", "ELSE", "WHILE", "PRINT", "NEW", "DESTROY", "NULL", "STRUCT", "LOAD", 
		"GLOBAL", "WORD", "MOD", "MULT", "PLUS", "MINUS", "DIV", "DOT", "PAR_L", 
		"PAR_R", "ASSIGN", "CURL_L", "CURL_R", "BRAC_L", "BRAC_R", "SEMCOL", "EQUAL", 
		"ADD_ASSIGN", "SUB_ASSIGN", "MULT_ASSIGN", "DIV_ASSIGN", "LESS", "GREATER", 
		"COLON", "COMMA", "NOT", "AND", "OR", "NOT_EQUAL", "APOSTROPHE", "WHITESPACE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "ll.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static llLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x35', '\x12E', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', '\x1A', '\x4', 
		'\x1B', '\t', '\x1B', '\x4', '\x1C', '\t', '\x1C', '\x4', '\x1D', '\t', 
		'\x1D', '\x4', '\x1E', '\t', '\x1E', '\x4', '\x1F', '\t', '\x1F', '\x4', 
		' ', '\t', ' ', '\x4', '!', '\t', '!', '\x4', '\"', '\t', '\"', '\x4', 
		'#', '\t', '#', '\x4', '$', '\t', '$', '\x4', '%', '\t', '%', '\x4', '&', 
		'\t', '&', '\x4', '\'', '\t', '\'', '\x4', '(', '\t', '(', '\x4', ')', 
		'\t', ')', '\x4', '*', '\t', '*', '\x4', '+', '\t', '+', '\x4', ',', '\t', 
		',', '\x4', '-', '\t', '-', '\x4', '.', '\t', '.', '\x4', '/', '\t', '/', 
		'\x4', '\x30', '\t', '\x30', '\x4', '\x31', '\t', '\x31', '\x4', '\x32', 
		'\t', '\x32', '\x4', '\x33', '\t', '\x33', '\x4', '\x34', '\t', '\x34', 
		'\x3', '\x2', '\x6', '\x2', 'k', '\n', '\x2', '\r', '\x2', '\xE', '\x2', 
		'l', '\x3', '\x2', '\x3', '\x2', '\x6', '\x2', 'q', '\n', '\x2', '\r', 
		'\x2', '\xE', '\x2', 'r', '\x3', '\x3', '\x6', '\x3', 'v', '\n', '\x3', 
		'\r', '\x3', '\xE', '\x3', 'w', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', 
		'\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', 
		'\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x6', '\x3', '\x6', 
		'\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', 
		'\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', 
		'\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', 
		'\t', '\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\n', 
		'\x3', '\n', '\x3', '\n', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', 
		'\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', 
		'\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', 
		'\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', 
		'\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', 
		'\xF', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', 
		'\x10', '\x3', '\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', '\x3', 
		'\x11', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', 
		'\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x13', '\x3', 
		'\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x14', '\x3', 
		'\x14', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', '\x3', 
		'\x14', '\x3', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', 
		'\x15', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', 
		'\x16', '\x3', '\x16', '\x3', '\x16', '\x3', '\x17', '\x5', '\x17', '\xE3', 
		'\n', '\x17', '\x3', '\x17', '\a', '\x17', '\xE6', '\n', '\x17', '\f', 
		'\x17', '\xE', '\x17', '\xE9', '\v', '\x17', '\x3', '\x18', '\x3', '\x18', 
		'\x3', '\x19', '\x3', '\x19', '\x3', '\x1A', '\x3', '\x1A', '\x3', '\x1B', 
		'\x3', '\x1B', '\x3', '\x1C', '\x3', '\x1C', '\x3', '\x1D', '\x3', '\x1D', 
		'\x3', '\x1E', '\x3', '\x1E', '\x3', '\x1F', '\x3', '\x1F', '\x3', ' ', 
		'\x3', ' ', '\x3', '!', '\x3', '!', '\x3', '\"', '\x3', '\"', '\x3', '#', 
		'\x3', '#', '\x3', '$', '\x3', '$', '\x3', '%', '\x3', '%', '\x3', '&', 
		'\x3', '&', '\x3', '&', '\x3', '\'', '\x3', '\'', '\x3', '\'', '\x3', 
		'(', '\x3', '(', '\x3', '(', '\x3', ')', '\x3', ')', '\x3', ')', '\x3', 
		'*', '\x3', '*', '\x3', '*', '\x3', '+', '\x3', '+', '\x3', ',', '\x3', 
		',', '\x3', '-', '\x3', '-', '\x3', '.', '\x3', '.', '\x3', '/', '\x3', 
		'/', '\x3', '\x30', '\x3', '\x30', '\x3', '\x30', '\x3', '\x31', '\x3', 
		'\x31', '\x3', '\x31', '\x3', '\x32', '\x3', '\x32', '\x3', '\x32', '\x3', 
		'\x33', '\x3', '\x33', '\x3', '\x34', '\x3', '\x34', '\x3', '\x34', '\x3', 
		'\x34', '\x2', '\x2', '\x35', '\x3', '\x3', '\x5', '\x4', '\a', '\x5', 
		'\t', '\x6', '\v', '\a', '\r', '\b', '\xF', '\t', '\x11', '\n', '\x13', 
		'\v', '\x15', '\f', '\x17', '\r', '\x19', '\xE', '\x1B', '\xF', '\x1D', 
		'\x10', '\x1F', '\x11', '!', '\x12', '#', '\x13', '%', '\x14', '\'', '\x15', 
		')', '\x16', '+', '\x17', '-', '\x18', '/', '\x19', '\x31', '\x1A', '\x33', 
		'\x1B', '\x35', '\x1C', '\x37', '\x1D', '\x39', '\x1E', ';', '\x1F', '=', 
		' ', '?', '!', '\x41', '\"', '\x43', '#', '\x45', '$', 'G', '%', 'I', 
		'&', 'K', '\'', 'M', '(', 'O', ')', 'Q', '*', 'S', '+', 'U', ',', 'W', 
		'-', 'Y', '.', '[', '/', ']', '\x30', '_', '\x31', '\x61', '\x32', '\x63', 
		'\x33', '\x65', '\x34', 'g', '\x35', '\x3', '\x2', '\x6', '\x3', '\x2', 
		'\x32', ';', '\x5', '\x2', '\x43', '\\', '\x61', '\x61', '\x63', '|', 
		'\x6', '\x2', '\x32', ';', '\x43', '\\', '\x61', '\x61', '\x63', '|', 
		'\x5', '\x2', '\v', '\f', '\xF', '\xF', '\"', '\"', '\x2', '\x131', '\x2', 
		'\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\x5', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', '\r', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', '!', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', '\x2', '%', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\'', '\x3', '\x2', '\x2', '\x2', '\x2', ')', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '+', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'-', '\x3', '\x2', '\x2', '\x2', '\x2', '/', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x31', '\x3', '\x2', '\x2', '\x2', '\x2', '\x33', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x35', '\x3', '\x2', '\x2', '\x2', '\x2', '\x37', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x39', '\x3', '\x2', '\x2', '\x2', 
		'\x2', ';', '\x3', '\x2', '\x2', '\x2', '\x2', '=', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '?', '\x3', '\x2', '\x2', '\x2', '\x2', '\x41', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x43', '\x3', '\x2', '\x2', '\x2', '\x2', '\x45', 
		'\x3', '\x2', '\x2', '\x2', '\x2', 'G', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'I', '\x3', '\x2', '\x2', '\x2', '\x2', 'K', '\x3', '\x2', '\x2', '\x2', 
		'\x2', 'M', '\x3', '\x2', '\x2', '\x2', '\x2', 'O', '\x3', '\x2', '\x2', 
		'\x2', '\x2', 'Q', '\x3', '\x2', '\x2', '\x2', '\x2', 'S', '\x3', '\x2', 
		'\x2', '\x2', '\x2', 'U', '\x3', '\x2', '\x2', '\x2', '\x2', 'W', '\x3', 
		'\x2', '\x2', '\x2', '\x2', 'Y', '\x3', '\x2', '\x2', '\x2', '\x2', '[', 
		'\x3', '\x2', '\x2', '\x2', '\x2', ']', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'_', '\x3', '\x2', '\x2', '\x2', '\x2', '\x61', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x63', '\x3', '\x2', '\x2', '\x2', '\x2', '\x65', '\x3', '\x2', 
		'\x2', '\x2', '\x2', 'g', '\x3', '\x2', '\x2', '\x2', '\x3', 'j', '\x3', 
		'\x2', '\x2', '\x2', '\x5', 'u', '\x3', '\x2', '\x2', '\x2', '\a', 'y', 
		'\x3', '\x2', '\x2', '\x2', '\t', '}', '\x3', '\x2', '\x2', '\x2', '\v', 
		'\x84', '\x3', '\x2', '\x2', '\x2', '\r', '\x88', '\x3', '\x2', '\x2', 
		'\x2', '\xF', '\x8F', '\x3', '\x2', '\x2', '\x2', '\x11', '\x94', '\x3', 
		'\x2', '\x2', '\x2', '\x13', '\x99', '\x3', '\x2', '\x2', '\x2', '\x15', 
		'\x9E', '\x3', '\x2', '\x2', '\x2', '\x17', '\xA3', '\x3', '\x2', '\x2', 
		'\x2', '\x19', '\xA9', '\x3', '\x2', '\x2', '\x2', '\x1B', '\xAC', '\x3', 
		'\x2', '\x2', '\x2', '\x1D', '\xB1', '\x3', '\x2', '\x2', '\x2', '\x1F', 
		'\xB7', '\x3', '\x2', '\x2', '\x2', '!', '\xBD', '\x3', '\x2', '\x2', 
		'\x2', '#', '\xC1', '\x3', '\x2', '\x2', '\x2', '%', '\xC9', '\x3', '\x2', 
		'\x2', '\x2', '\'', '\xCE', '\x3', '\x2', '\x2', '\x2', ')', '\xD5', '\x3', 
		'\x2', '\x2', '\x2', '+', '\xDA', '\x3', '\x2', '\x2', '\x2', '-', '\xE2', 
		'\x3', '\x2', '\x2', '\x2', '/', '\xEA', '\x3', '\x2', '\x2', '\x2', '\x31', 
		'\xEC', '\x3', '\x2', '\x2', '\x2', '\x33', '\xEE', '\x3', '\x2', '\x2', 
		'\x2', '\x35', '\xF0', '\x3', '\x2', '\x2', '\x2', '\x37', '\xF2', '\x3', 
		'\x2', '\x2', '\x2', '\x39', '\xF4', '\x3', '\x2', '\x2', '\x2', ';', 
		'\xF6', '\x3', '\x2', '\x2', '\x2', '=', '\xF8', '\x3', '\x2', '\x2', 
		'\x2', '?', '\xFA', '\x3', '\x2', '\x2', '\x2', '\x41', '\xFC', '\x3', 
		'\x2', '\x2', '\x2', '\x43', '\xFE', '\x3', '\x2', '\x2', '\x2', '\x45', 
		'\x100', '\x3', '\x2', '\x2', '\x2', 'G', '\x102', '\x3', '\x2', '\x2', 
		'\x2', 'I', '\x104', '\x3', '\x2', '\x2', '\x2', 'K', '\x106', '\x3', 
		'\x2', '\x2', '\x2', 'M', '\x109', '\x3', '\x2', '\x2', '\x2', 'O', '\x10C', 
		'\x3', '\x2', '\x2', '\x2', 'Q', '\x10F', '\x3', '\x2', '\x2', '\x2', 
		'S', '\x112', '\x3', '\x2', '\x2', '\x2', 'U', '\x115', '\x3', '\x2', 
		'\x2', '\x2', 'W', '\x117', '\x3', '\x2', '\x2', '\x2', 'Y', '\x119', 
		'\x3', '\x2', '\x2', '\x2', '[', '\x11B', '\x3', '\x2', '\x2', '\x2', 
		']', '\x11D', '\x3', '\x2', '\x2', '\x2', '_', '\x11F', '\x3', '\x2', 
		'\x2', '\x2', '\x61', '\x122', '\x3', '\x2', '\x2', '\x2', '\x63', '\x125', 
		'\x3', '\x2', '\x2', '\x2', '\x65', '\x128', '\x3', '\x2', '\x2', '\x2', 
		'g', '\x12A', '\x3', '\x2', '\x2', '\x2', 'i', 'k', '\t', '\x2', '\x2', 
		'\x2', 'j', 'i', '\x3', '\x2', '\x2', '\x2', 'k', 'l', '\x3', '\x2', '\x2', 
		'\x2', 'l', 'j', '\x3', '\x2', '\x2', '\x2', 'l', 'm', '\x3', '\x2', '\x2', 
		'\x2', 'm', 'n', '\x3', '\x2', '\x2', '\x2', 'n', 'p', '\x5', '\x39', 
		'\x1D', '\x2', 'o', 'q', '\t', '\x2', '\x2', '\x2', 'p', 'o', '\x3', '\x2', 
		'\x2', '\x2', 'q', 'r', '\x3', '\x2', '\x2', '\x2', 'r', 'p', '\x3', '\x2', 
		'\x2', '\x2', 'r', 's', '\x3', '\x2', '\x2', '\x2', 's', '\x4', '\x3', 
		'\x2', '\x2', '\x2', 't', 'v', '\t', '\x2', '\x2', '\x2', 'u', 't', '\x3', 
		'\x2', '\x2', '\x2', 'v', 'w', '\x3', '\x2', '\x2', '\x2', 'w', 'u', '\x3', 
		'\x2', '\x2', '\x2', 'w', 'x', '\x3', '\x2', '\x2', '\x2', 'x', '\x6', 
		'\x3', '\x2', '\x2', '\x2', 'y', 'z', '\x5', '\x65', '\x33', '\x2', 'z', 
		'{', '\x4', '\x2', '\x81', '\x2', '{', '|', '\x5', '\x65', '\x33', '\x2', 
		'|', '\b', '\x3', '\x2', '\x2', '\x2', '}', '~', '\a', 't', '\x2', '\x2', 
		'~', '\x7F', '\a', 'g', '\x2', '\x2', '\x7F', '\x80', '\a', 'v', '\x2', 
		'\x2', '\x80', '\x81', '\a', 'w', '\x2', '\x2', '\x81', '\x82', '\a', 
		't', '\x2', '\x2', '\x82', '\x83', '\a', 'p', '\x2', '\x2', '\x83', '\n', 
		'\x3', '\x2', '\x2', '\x2', '\x84', '\x85', '\a', 'k', '\x2', '\x2', '\x85', 
		'\x86', '\a', 'p', '\x2', '\x2', '\x86', '\x87', '\a', 'v', '\x2', '\x2', 
		'\x87', '\f', '\x3', '\x2', '\x2', '\x2', '\x88', '\x89', '\a', '\x66', 
		'\x2', '\x2', '\x89', '\x8A', '\a', 'q', '\x2', '\x2', '\x8A', '\x8B', 
		'\a', 'w', '\x2', '\x2', '\x8B', '\x8C', '\a', '\x64', '\x2', '\x2', '\x8C', 
		'\x8D', '\a', 'n', '\x2', '\x2', '\x8D', '\x8E', '\a', 'g', '\x2', '\x2', 
		'\x8E', '\xE', '\x3', '\x2', '\x2', '\x2', '\x8F', '\x90', '\a', '\x64', 
		'\x2', '\x2', '\x90', '\x91', '\a', 'q', '\x2', '\x2', '\x91', '\x92', 
		'\a', 'q', '\x2', '\x2', '\x92', '\x93', '\a', 'n', '\x2', '\x2', '\x93', 
		'\x10', '\x3', '\x2', '\x2', '\x2', '\x94', '\x95', '\a', 'x', '\x2', 
		'\x2', '\x95', '\x96', '\a', 'q', '\x2', '\x2', '\x96', '\x97', '\a', 
		'k', '\x2', '\x2', '\x97', '\x98', '\a', '\x66', '\x2', '\x2', '\x98', 
		'\x12', '\x3', '\x2', '\x2', '\x2', '\x99', '\x9A', '\a', '\x65', '\x2', 
		'\x2', '\x9A', '\x9B', '\a', 'j', '\x2', '\x2', '\x9B', '\x9C', '\a', 
		'\x63', '\x2', '\x2', '\x9C', '\x9D', '\a', 't', '\x2', '\x2', '\x9D', 
		'\x14', '\x3', '\x2', '\x2', '\x2', '\x9E', '\x9F', '\a', 'v', '\x2', 
		'\x2', '\x9F', '\xA0', '\a', 't', '\x2', '\x2', '\xA0', '\xA1', '\a', 
		'w', '\x2', '\x2', '\xA1', '\xA2', '\a', 'g', '\x2', '\x2', '\xA2', '\x16', 
		'\x3', '\x2', '\x2', '\x2', '\xA3', '\xA4', '\a', 'h', '\x2', '\x2', '\xA4', 
		'\xA5', '\a', '\x63', '\x2', '\x2', '\xA5', '\xA6', '\a', 'n', '\x2', 
		'\x2', '\xA6', '\xA7', '\a', 'u', '\x2', '\x2', '\xA7', '\xA8', '\a', 
		'g', '\x2', '\x2', '\xA8', '\x18', '\x3', '\x2', '\x2', '\x2', '\xA9', 
		'\xAA', '\a', 'k', '\x2', '\x2', '\xAA', '\xAB', '\a', 'h', '\x2', '\x2', 
		'\xAB', '\x1A', '\x3', '\x2', '\x2', '\x2', '\xAC', '\xAD', '\a', 'g', 
		'\x2', '\x2', '\xAD', '\xAE', '\a', 'n', '\x2', '\x2', '\xAE', '\xAF', 
		'\a', 'u', '\x2', '\x2', '\xAF', '\xB0', '\a', 'g', '\x2', '\x2', '\xB0', 
		'\x1C', '\x3', '\x2', '\x2', '\x2', '\xB1', '\xB2', '\a', 'y', '\x2', 
		'\x2', '\xB2', '\xB3', '\a', 'j', '\x2', '\x2', '\xB3', '\xB4', '\a', 
		'k', '\x2', '\x2', '\xB4', '\xB5', '\a', 'n', '\x2', '\x2', '\xB5', '\xB6', 
		'\a', 'g', '\x2', '\x2', '\xB6', '\x1E', '\x3', '\x2', '\x2', '\x2', '\xB7', 
		'\xB8', '\a', 'r', '\x2', '\x2', '\xB8', '\xB9', '\a', 't', '\x2', '\x2', 
		'\xB9', '\xBA', '\a', 'k', '\x2', '\x2', '\xBA', '\xBB', '\a', 'p', '\x2', 
		'\x2', '\xBB', '\xBC', '\a', 'v', '\x2', '\x2', '\xBC', ' ', '\x3', '\x2', 
		'\x2', '\x2', '\xBD', '\xBE', '\a', 'p', '\x2', '\x2', '\xBE', '\xBF', 
		'\a', 'g', '\x2', '\x2', '\xBF', '\xC0', '\a', 'y', '\x2', '\x2', '\xC0', 
		'\"', '\x3', '\x2', '\x2', '\x2', '\xC1', '\xC2', '\a', '\x66', '\x2', 
		'\x2', '\xC2', '\xC3', '\a', 'g', '\x2', '\x2', '\xC3', '\xC4', '\a', 
		'u', '\x2', '\x2', '\xC4', '\xC5', '\a', 'v', '\x2', '\x2', '\xC5', '\xC6', 
		'\a', 't', '\x2', '\x2', '\xC6', '\xC7', '\a', 'q', '\x2', '\x2', '\xC7', 
		'\xC8', '\a', '{', '\x2', '\x2', '\xC8', '$', '\x3', '\x2', '\x2', '\x2', 
		'\xC9', '\xCA', '\a', 'p', '\x2', '\x2', '\xCA', '\xCB', '\a', 'w', '\x2', 
		'\x2', '\xCB', '\xCC', '\a', 'n', '\x2', '\x2', '\xCC', '\xCD', '\a', 
		'n', '\x2', '\x2', '\xCD', '&', '\x3', '\x2', '\x2', '\x2', '\xCE', '\xCF', 
		'\a', 'u', '\x2', '\x2', '\xCF', '\xD0', '\a', 'v', '\x2', '\x2', '\xD0', 
		'\xD1', '\a', 't', '\x2', '\x2', '\xD1', '\xD2', '\a', 'w', '\x2', '\x2', 
		'\xD2', '\xD3', '\a', '\x65', '\x2', '\x2', '\xD3', '\xD4', '\a', 'v', 
		'\x2', '\x2', '\xD4', '(', '\x3', '\x2', '\x2', '\x2', '\xD5', '\xD6', 
		'\a', 'n', '\x2', '\x2', '\xD6', '\xD7', '\a', 'q', '\x2', '\x2', '\xD7', 
		'\xD8', '\a', '\x63', '\x2', '\x2', '\xD8', '\xD9', '\a', '\x66', '\x2', 
		'\x2', '\xD9', '*', '\x3', '\x2', '\x2', '\x2', '\xDA', '\xDB', '\a', 
		'i', '\x2', '\x2', '\xDB', '\xDC', '\a', 'n', '\x2', '\x2', '\xDC', '\xDD', 
		'\a', 'q', '\x2', '\x2', '\xDD', '\xDE', '\a', '\x64', '\x2', '\x2', '\xDE', 
		'\xDF', '\a', '\x63', '\x2', '\x2', '\xDF', '\xE0', '\a', 'n', '\x2', 
		'\x2', '\xE0', ',', '\x3', '\x2', '\x2', '\x2', '\xE1', '\xE3', '\t', 
		'\x3', '\x2', '\x2', '\xE2', '\xE1', '\x3', '\x2', '\x2', '\x2', '\xE3', 
		'\xE7', '\x3', '\x2', '\x2', '\x2', '\xE4', '\xE6', '\t', '\x4', '\x2', 
		'\x2', '\xE5', '\xE4', '\x3', '\x2', '\x2', '\x2', '\xE6', '\xE9', '\x3', 
		'\x2', '\x2', '\x2', '\xE7', '\xE5', '\x3', '\x2', '\x2', '\x2', '\xE7', 
		'\xE8', '\x3', '\x2', '\x2', '\x2', '\xE8', '.', '\x3', '\x2', '\x2', 
		'\x2', '\xE9', '\xE7', '\x3', '\x2', '\x2', '\x2', '\xEA', '\xEB', '\a', 
		'\'', '\x2', '\x2', '\xEB', '\x30', '\x3', '\x2', '\x2', '\x2', '\xEC', 
		'\xED', '\a', ',', '\x2', '\x2', '\xED', '\x32', '\x3', '\x2', '\x2', 
		'\x2', '\xEE', '\xEF', '\a', '-', '\x2', '\x2', '\xEF', '\x34', '\x3', 
		'\x2', '\x2', '\x2', '\xF0', '\xF1', '\a', '/', '\x2', '\x2', '\xF1', 
		'\x36', '\x3', '\x2', '\x2', '\x2', '\xF2', '\xF3', '\a', '\x31', '\x2', 
		'\x2', '\xF3', '\x38', '\x3', '\x2', '\x2', '\x2', '\xF4', '\xF5', '\a', 
		'\x30', '\x2', '\x2', '\xF5', ':', '\x3', '\x2', '\x2', '\x2', '\xF6', 
		'\xF7', '\a', '*', '\x2', '\x2', '\xF7', '<', '\x3', '\x2', '\x2', '\x2', 
		'\xF8', '\xF9', '\a', '+', '\x2', '\x2', '\xF9', '>', '\x3', '\x2', '\x2', 
		'\x2', '\xFA', '\xFB', '\a', '?', '\x2', '\x2', '\xFB', '@', '\x3', '\x2', 
		'\x2', '\x2', '\xFC', '\xFD', '\a', '}', '\x2', '\x2', '\xFD', '\x42', 
		'\x3', '\x2', '\x2', '\x2', '\xFE', '\xFF', '\a', '\x7F', '\x2', '\x2', 
		'\xFF', '\x44', '\x3', '\x2', '\x2', '\x2', '\x100', '\x101', '\a', ']', 
		'\x2', '\x2', '\x101', '\x46', '\x3', '\x2', '\x2', '\x2', '\x102', '\x103', 
		'\a', '_', '\x2', '\x2', '\x103', 'H', '\x3', '\x2', '\x2', '\x2', '\x104', 
		'\x105', '\a', '=', '\x2', '\x2', '\x105', 'J', '\x3', '\x2', '\x2', '\x2', 
		'\x106', '\x107', '\a', '?', '\x2', '\x2', '\x107', '\x108', '\a', '?', 
		'\x2', '\x2', '\x108', 'L', '\x3', '\x2', '\x2', '\x2', '\x109', '\x10A', 
		'\a', '-', '\x2', '\x2', '\x10A', '\x10B', '\a', '?', '\x2', '\x2', '\x10B', 
		'N', '\x3', '\x2', '\x2', '\x2', '\x10C', '\x10D', '\a', '/', '\x2', '\x2', 
		'\x10D', '\x10E', '\a', '?', '\x2', '\x2', '\x10E', 'P', '\x3', '\x2', 
		'\x2', '\x2', '\x10F', '\x110', '\a', ',', '\x2', '\x2', '\x110', '\x111', 
		'\a', '?', '\x2', '\x2', '\x111', 'R', '\x3', '\x2', '\x2', '\x2', '\x112', 
		'\x113', '\a', '\x31', '\x2', '\x2', '\x113', '\x114', '\a', '?', '\x2', 
		'\x2', '\x114', 'T', '\x3', '\x2', '\x2', '\x2', '\x115', '\x116', '\a', 
		'>', '\x2', '\x2', '\x116', 'V', '\x3', '\x2', '\x2', '\x2', '\x117', 
		'\x118', '\a', '@', '\x2', '\x2', '\x118', 'X', '\x3', '\x2', '\x2', '\x2', 
		'\x119', '\x11A', '\a', '<', '\x2', '\x2', '\x11A', 'Z', '\x3', '\x2', 
		'\x2', '\x2', '\x11B', '\x11C', '\a', '.', '\x2', '\x2', '\x11C', '\\', 
		'\x3', '\x2', '\x2', '\x2', '\x11D', '\x11E', '\a', '#', '\x2', '\x2', 
		'\x11E', '^', '\x3', '\x2', '\x2', '\x2', '\x11F', '\x120', '\a', '(', 
		'\x2', '\x2', '\x120', '\x121', '\a', '(', '\x2', '\x2', '\x121', '`', 
		'\x3', '\x2', '\x2', '\x2', '\x122', '\x123', '\a', '~', '\x2', '\x2', 
		'\x123', '\x124', '\a', '~', '\x2', '\x2', '\x124', '\x62', '\x3', '\x2', 
		'\x2', '\x2', '\x125', '\x126', '\a', '#', '\x2', '\x2', '\x126', '\x127', 
		'\a', '?', '\x2', '\x2', '\x127', '\x64', '\x3', '\x2', '\x2', '\x2', 
		'\x128', '\x129', '\a', ')', '\x2', '\x2', '\x129', '\x66', '\x3', '\x2', 
		'\x2', '\x2', '\x12A', '\x12B', '\t', '\x5', '\x2', '\x2', '\x12B', '\x12C', 
		'\x3', '\x2', '\x2', '\x2', '\x12C', '\x12D', '\b', '\x34', '\x2', '\x2', 
		'\x12D', 'h', '\x3', '\x2', '\x2', '\x2', '\t', '\x2', 'l', 'r', 'w', 
		'\xE2', '\xE5', '\xE7', '\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace LL
