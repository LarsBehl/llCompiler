//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ll.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace ll {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public partial class llLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		DOUBLE_LITERAL=1, INTEGER_LITERAL=2, RETURN=3, INT_TYPE=4, DOUBLE_TYPE=5, 
		BOOL_TYPE=6, VOID_TYPE=7, BOOL_TRUE=8, BOOL_FALSE=9, IF=10, ELSE=11, WHILE=12, 
		WORD=13, MULT=14, PLUS=15, MINUS=16, DIV=17, DOT=18, PAR_L=19, PAR_R=20, 
		ASSIGN=21, CURL_L=22, CURL_R=23, SEMCOL=24, EQUAL=25, ADD_ASSIGN=26, SUB_ASSIGN=27, 
		MULT_ASSIGN=28, DIV_ASSIGN=29, LESS=30, GREATER=31, COLON=32, COMMA=33, 
		NOT=34, AND=35, OR=36, NOT_EQUAL=37, WHITESPACE=38;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"DOUBLE_LITERAL", "INTEGER_LITERAL", "RETURN", "INT_TYPE", "DOUBLE_TYPE", 
		"BOOL_TYPE", "VOID_TYPE", "BOOL_TRUE", "BOOL_FALSE", "IF", "ELSE", "WHILE", 
		"WORD", "MULT", "PLUS", "MINUS", "DIV", "DOT", "PAR_L", "PAR_R", "ASSIGN", 
		"CURL_L", "CURL_R", "SEMCOL", "EQUAL", "ADD_ASSIGN", "SUB_ASSIGN", "MULT_ASSIGN", 
		"DIV_ASSIGN", "LESS", "GREATER", "COLON", "COMMA", "NOT", "AND", "OR", 
		"NOT_EQUAL", "WHITESPACE"
	};


	public llLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public llLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, "'*'", "'+'", "'-'", "'/'", "'.'", "'('", "')'", "'='", "'{'", 
		"'}'", "';'", null, null, null, null, null, "'<'", "'>'", "':'", "','", 
		"'!'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "DOUBLE_LITERAL", "INTEGER_LITERAL", "RETURN", "INT_TYPE", "DOUBLE_TYPE", 
		"BOOL_TYPE", "VOID_TYPE", "BOOL_TRUE", "BOOL_FALSE", "IF", "ELSE", "WHILE", 
		"WORD", "MULT", "PLUS", "MINUS", "DIV", "DOT", "PAR_L", "PAR_R", "ASSIGN", 
		"CURL_L", "CURL_R", "SEMCOL", "EQUAL", "ADD_ASSIGN", "SUB_ASSIGN", "MULT_ASSIGN", 
		"DIV_ASSIGN", "LESS", "GREATER", "COLON", "COMMA", "NOT", "AND", "OR", 
		"NOT_EQUAL", "WHITESPACE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "ll.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static llLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '(', '\xD9', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', '\x1A', '\x4', 
		'\x1B', '\t', '\x1B', '\x4', '\x1C', '\t', '\x1C', '\x4', '\x1D', '\t', 
		'\x1D', '\x4', '\x1E', '\t', '\x1E', '\x4', '\x1F', '\t', '\x1F', '\x4', 
		' ', '\t', ' ', '\x4', '!', '\t', '!', '\x4', '\"', '\t', '\"', '\x4', 
		'#', '\t', '#', '\x4', '$', '\t', '$', '\x4', '%', '\t', '%', '\x4', '&', 
		'\t', '&', '\x4', '\'', '\t', '\'', '\x3', '\x2', '\x6', '\x2', 'Q', '\n', 
		'\x2', '\r', '\x2', '\xE', '\x2', 'R', '\x3', '\x2', '\x3', '\x2', '\x6', 
		'\x2', 'W', '\n', '\x2', '\r', '\x2', '\xE', '\x2', 'X', '\x3', '\x3', 
		'\x6', '\x3', '\\', '\n', '\x3', '\r', '\x3', '\xE', '\x3', ']', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\a', 
		'\x3', '\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', 
		'\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', 
		'\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', 
		'\n', '\x3', '\n', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\f', 
		'\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', 
		'\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\xE', 
		'\x5', '\xE', '\x96', '\n', '\xE', '\x3', '\xE', '\a', '\xE', '\x99', 
		'\n', '\xE', '\f', '\xE', '\xE', '\xE', '\x9C', '\v', '\xE', '\x3', '\xF', 
		'\x3', '\xF', '\x3', '\x10', '\x3', '\x10', '\x3', '\x11', '\x3', '\x11', 
		'\x3', '\x12', '\x3', '\x12', '\x3', '\x13', '\x3', '\x13', '\x3', '\x14', 
		'\x3', '\x14', '\x3', '\x15', '\x3', '\x15', '\x3', '\x16', '\x3', '\x16', 
		'\x3', '\x17', '\x3', '\x17', '\x3', '\x18', '\x3', '\x18', '\x3', '\x19', 
		'\x3', '\x19', '\x3', '\x1A', '\x3', '\x1A', '\x3', '\x1A', '\x3', '\x1B', 
		'\x3', '\x1B', '\x3', '\x1B', '\x3', '\x1C', '\x3', '\x1C', '\x3', '\x1C', 
		'\x3', '\x1D', '\x3', '\x1D', '\x3', '\x1D', '\x3', '\x1E', '\x3', '\x1E', 
		'\x3', '\x1E', '\x3', '\x1F', '\x3', '\x1F', '\x3', ' ', '\x3', ' ', '\x3', 
		'!', '\x3', '!', '\x3', '\"', '\x3', '\"', '\x3', '#', '\x3', '#', '\x3', 
		'$', '\x3', '$', '\x3', '$', '\x3', '%', '\x3', '%', '\x3', '%', '\x3', 
		'&', '\x3', '&', '\x3', '&', '\x3', '\'', '\x3', '\'', '\x3', '\'', '\x3', 
		'\'', '\x2', '\x2', '(', '\x3', '\x3', '\x5', '\x4', '\a', '\x5', '\t', 
		'\x6', '\v', '\a', '\r', '\b', '\xF', '\t', '\x11', '\n', '\x13', '\v', 
		'\x15', '\f', '\x17', '\r', '\x19', '\xE', '\x1B', '\xF', '\x1D', '\x10', 
		'\x1F', '\x11', '!', '\x12', '#', '\x13', '%', '\x14', '\'', '\x15', ')', 
		'\x16', '+', '\x17', '-', '\x18', '/', '\x19', '\x31', '\x1A', '\x33', 
		'\x1B', '\x35', '\x1C', '\x37', '\x1D', '\x39', '\x1E', ';', '\x1F', '=', 
		' ', '?', '!', '\x41', '\"', '\x43', '#', '\x45', '$', 'G', '%', 'I', 
		'&', 'K', '\'', 'M', '(', '\x3', '\x2', '\x6', '\x3', '\x2', '\x32', ';', 
		'\x5', '\x2', '\x43', '\\', '\x61', '\x61', '\x63', '|', '\x6', '\x2', 
		'\x32', ';', '\x43', '\\', '\x61', '\x61', '\x63', '|', '\x5', '\x2', 
		'\v', '\f', '\xF', '\xF', '\"', '\"', '\x2', '\xDC', '\x2', '\x3', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x5', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', '\r', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', '\x2', '\x11', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x15', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1B', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', '!', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '#', '\x3', '\x2', '\x2', '\x2', '\x2', '%', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\'', '\x3', '\x2', '\x2', '\x2', '\x2', ')', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '+', '\x3', '\x2', '\x2', '\x2', '\x2', '-', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '/', '\x3', '\x2', '\x2', '\x2', '\x2', '\x31', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x33', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x35', '\x3', '\x2', '\x2', '\x2', '\x2', '\x37', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x39', '\x3', '\x2', '\x2', '\x2', '\x2', ';', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '=', '\x3', '\x2', '\x2', '\x2', '\x2', '?', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x41', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x43', '\x3', '\x2', '\x2', '\x2', '\x2', '\x45', '\x3', '\x2', 
		'\x2', '\x2', '\x2', 'G', '\x3', '\x2', '\x2', '\x2', '\x2', 'I', '\x3', 
		'\x2', '\x2', '\x2', '\x2', 'K', '\x3', '\x2', '\x2', '\x2', '\x2', 'M', 
		'\x3', '\x2', '\x2', '\x2', '\x3', 'P', '\x3', '\x2', '\x2', '\x2', '\x5', 
		'[', '\x3', '\x2', '\x2', '\x2', '\a', '_', '\x3', '\x2', '\x2', '\x2', 
		'\t', '\x66', '\x3', '\x2', '\x2', '\x2', '\v', 'j', '\x3', '\x2', '\x2', 
		'\x2', '\r', 'q', '\x3', '\x2', '\x2', '\x2', '\xF', 'v', '\x3', '\x2', 
		'\x2', '\x2', '\x11', '{', '\x3', '\x2', '\x2', '\x2', '\x13', '\x80', 
		'\x3', '\x2', '\x2', '\x2', '\x15', '\x86', '\x3', '\x2', '\x2', '\x2', 
		'\x17', '\x89', '\x3', '\x2', '\x2', '\x2', '\x19', '\x8E', '\x3', '\x2', 
		'\x2', '\x2', '\x1B', '\x95', '\x3', '\x2', '\x2', '\x2', '\x1D', '\x9D', 
		'\x3', '\x2', '\x2', '\x2', '\x1F', '\x9F', '\x3', '\x2', '\x2', '\x2', 
		'!', '\xA1', '\x3', '\x2', '\x2', '\x2', '#', '\xA3', '\x3', '\x2', '\x2', 
		'\x2', '%', '\xA5', '\x3', '\x2', '\x2', '\x2', '\'', '\xA7', '\x3', '\x2', 
		'\x2', '\x2', ')', '\xA9', '\x3', '\x2', '\x2', '\x2', '+', '\xAB', '\x3', 
		'\x2', '\x2', '\x2', '-', '\xAD', '\x3', '\x2', '\x2', '\x2', '/', '\xAF', 
		'\x3', '\x2', '\x2', '\x2', '\x31', '\xB1', '\x3', '\x2', '\x2', '\x2', 
		'\x33', '\xB3', '\x3', '\x2', '\x2', '\x2', '\x35', '\xB6', '\x3', '\x2', 
		'\x2', '\x2', '\x37', '\xB9', '\x3', '\x2', '\x2', '\x2', '\x39', '\xBC', 
		'\x3', '\x2', '\x2', '\x2', ';', '\xBF', '\x3', '\x2', '\x2', '\x2', '=', 
		'\xC2', '\x3', '\x2', '\x2', '\x2', '?', '\xC4', '\x3', '\x2', '\x2', 
		'\x2', '\x41', '\xC6', '\x3', '\x2', '\x2', '\x2', '\x43', '\xC8', '\x3', 
		'\x2', '\x2', '\x2', '\x45', '\xCA', '\x3', '\x2', '\x2', '\x2', 'G', 
		'\xCC', '\x3', '\x2', '\x2', '\x2', 'I', '\xCF', '\x3', '\x2', '\x2', 
		'\x2', 'K', '\xD2', '\x3', '\x2', '\x2', '\x2', 'M', '\xD5', '\x3', '\x2', 
		'\x2', '\x2', 'O', 'Q', '\t', '\x2', '\x2', '\x2', 'P', 'O', '\x3', '\x2', 
		'\x2', '\x2', 'Q', 'R', '\x3', '\x2', '\x2', '\x2', 'R', 'P', '\x3', '\x2', 
		'\x2', '\x2', 'R', 'S', '\x3', '\x2', '\x2', '\x2', 'S', 'T', '\x3', '\x2', 
		'\x2', '\x2', 'T', 'V', '\x5', '%', '\x13', '\x2', 'U', 'W', '\t', '\x2', 
		'\x2', '\x2', 'V', 'U', '\x3', '\x2', '\x2', '\x2', 'W', 'X', '\x3', '\x2', 
		'\x2', '\x2', 'X', 'V', '\x3', '\x2', '\x2', '\x2', 'X', 'Y', '\x3', '\x2', 
		'\x2', '\x2', 'Y', '\x4', '\x3', '\x2', '\x2', '\x2', 'Z', '\\', '\t', 
		'\x2', '\x2', '\x2', '[', 'Z', '\x3', '\x2', '\x2', '\x2', '\\', ']', 
		'\x3', '\x2', '\x2', '\x2', ']', '[', '\x3', '\x2', '\x2', '\x2', ']', 
		'^', '\x3', '\x2', '\x2', '\x2', '^', '\x6', '\x3', '\x2', '\x2', '\x2', 
		'_', '`', '\a', 't', '\x2', '\x2', '`', '\x61', '\a', 'g', '\x2', '\x2', 
		'\x61', '\x62', '\a', 'v', '\x2', '\x2', '\x62', '\x63', '\a', 'w', '\x2', 
		'\x2', '\x63', '\x64', '\a', 't', '\x2', '\x2', '\x64', '\x65', '\a', 
		'p', '\x2', '\x2', '\x65', '\b', '\x3', '\x2', '\x2', '\x2', '\x66', 'g', 
		'\a', 'k', '\x2', '\x2', 'g', 'h', '\a', 'p', '\x2', '\x2', 'h', 'i', 
		'\a', 'v', '\x2', '\x2', 'i', '\n', '\x3', '\x2', '\x2', '\x2', 'j', 'k', 
		'\a', '\x66', '\x2', '\x2', 'k', 'l', '\a', 'q', '\x2', '\x2', 'l', 'm', 
		'\a', 'w', '\x2', '\x2', 'm', 'n', '\a', '\x64', '\x2', '\x2', 'n', 'o', 
		'\a', 'n', '\x2', '\x2', 'o', 'p', '\a', 'g', '\x2', '\x2', 'p', '\f', 
		'\x3', '\x2', '\x2', '\x2', 'q', 'r', '\a', '\x64', '\x2', '\x2', 'r', 
		's', '\a', 'q', '\x2', '\x2', 's', 't', '\a', 'q', '\x2', '\x2', 't', 
		'u', '\a', 'n', '\x2', '\x2', 'u', '\xE', '\x3', '\x2', '\x2', '\x2', 
		'v', 'w', '\a', 'x', '\x2', '\x2', 'w', 'x', '\a', 'q', '\x2', '\x2', 
		'x', 'y', '\a', 'k', '\x2', '\x2', 'y', 'z', '\a', '\x66', '\x2', '\x2', 
		'z', '\x10', '\x3', '\x2', '\x2', '\x2', '{', '|', '\a', 'v', '\x2', '\x2', 
		'|', '}', '\a', 't', '\x2', '\x2', '}', '~', '\a', 'w', '\x2', '\x2', 
		'~', '\x7F', '\a', 'g', '\x2', '\x2', '\x7F', '\x12', '\x3', '\x2', '\x2', 
		'\x2', '\x80', '\x81', '\a', 'h', '\x2', '\x2', '\x81', '\x82', '\a', 
		'\x63', '\x2', '\x2', '\x82', '\x83', '\a', 'n', '\x2', '\x2', '\x83', 
		'\x84', '\a', 'u', '\x2', '\x2', '\x84', '\x85', '\a', 'g', '\x2', '\x2', 
		'\x85', '\x14', '\x3', '\x2', '\x2', '\x2', '\x86', '\x87', '\a', 'k', 
		'\x2', '\x2', '\x87', '\x88', '\a', 'h', '\x2', '\x2', '\x88', '\x16', 
		'\x3', '\x2', '\x2', '\x2', '\x89', '\x8A', '\a', 'g', '\x2', '\x2', '\x8A', 
		'\x8B', '\a', 'n', '\x2', '\x2', '\x8B', '\x8C', '\a', 'u', '\x2', '\x2', 
		'\x8C', '\x8D', '\a', 'g', '\x2', '\x2', '\x8D', '\x18', '\x3', '\x2', 
		'\x2', '\x2', '\x8E', '\x8F', '\a', 'y', '\x2', '\x2', '\x8F', '\x90', 
		'\a', 'j', '\x2', '\x2', '\x90', '\x91', '\a', 'k', '\x2', '\x2', '\x91', 
		'\x92', '\a', 'n', '\x2', '\x2', '\x92', '\x93', '\a', 'g', '\x2', '\x2', 
		'\x93', '\x1A', '\x3', '\x2', '\x2', '\x2', '\x94', '\x96', '\t', '\x3', 
		'\x2', '\x2', '\x95', '\x94', '\x3', '\x2', '\x2', '\x2', '\x96', '\x9A', 
		'\x3', '\x2', '\x2', '\x2', '\x97', '\x99', '\t', '\x4', '\x2', '\x2', 
		'\x98', '\x97', '\x3', '\x2', '\x2', '\x2', '\x99', '\x9C', '\x3', '\x2', 
		'\x2', '\x2', '\x9A', '\x98', '\x3', '\x2', '\x2', '\x2', '\x9A', '\x9B', 
		'\x3', '\x2', '\x2', '\x2', '\x9B', '\x1C', '\x3', '\x2', '\x2', '\x2', 
		'\x9C', '\x9A', '\x3', '\x2', '\x2', '\x2', '\x9D', '\x9E', '\a', ',', 
		'\x2', '\x2', '\x9E', '\x1E', '\x3', '\x2', '\x2', '\x2', '\x9F', '\xA0', 
		'\a', '-', '\x2', '\x2', '\xA0', ' ', '\x3', '\x2', '\x2', '\x2', '\xA1', 
		'\xA2', '\a', '/', '\x2', '\x2', '\xA2', '\"', '\x3', '\x2', '\x2', '\x2', 
		'\xA3', '\xA4', '\a', '\x31', '\x2', '\x2', '\xA4', '$', '\x3', '\x2', 
		'\x2', '\x2', '\xA5', '\xA6', '\a', '\x30', '\x2', '\x2', '\xA6', '&', 
		'\x3', '\x2', '\x2', '\x2', '\xA7', '\xA8', '\a', '*', '\x2', '\x2', '\xA8', 
		'(', '\x3', '\x2', '\x2', '\x2', '\xA9', '\xAA', '\a', '+', '\x2', '\x2', 
		'\xAA', '*', '\x3', '\x2', '\x2', '\x2', '\xAB', '\xAC', '\a', '?', '\x2', 
		'\x2', '\xAC', ',', '\x3', '\x2', '\x2', '\x2', '\xAD', '\xAE', '\a', 
		'}', '\x2', '\x2', '\xAE', '.', '\x3', '\x2', '\x2', '\x2', '\xAF', '\xB0', 
		'\a', '\x7F', '\x2', '\x2', '\xB0', '\x30', '\x3', '\x2', '\x2', '\x2', 
		'\xB1', '\xB2', '\a', '=', '\x2', '\x2', '\xB2', '\x32', '\x3', '\x2', 
		'\x2', '\x2', '\xB3', '\xB4', '\a', '?', '\x2', '\x2', '\xB4', '\xB5', 
		'\a', '?', '\x2', '\x2', '\xB5', '\x34', '\x3', '\x2', '\x2', '\x2', '\xB6', 
		'\xB7', '\a', '-', '\x2', '\x2', '\xB7', '\xB8', '\a', '?', '\x2', '\x2', 
		'\xB8', '\x36', '\x3', '\x2', '\x2', '\x2', '\xB9', '\xBA', '\a', '/', 
		'\x2', '\x2', '\xBA', '\xBB', '\a', '?', '\x2', '\x2', '\xBB', '\x38', 
		'\x3', '\x2', '\x2', '\x2', '\xBC', '\xBD', '\a', ',', '\x2', '\x2', '\xBD', 
		'\xBE', '\a', '?', '\x2', '\x2', '\xBE', ':', '\x3', '\x2', '\x2', '\x2', 
		'\xBF', '\xC0', '\a', '\x31', '\x2', '\x2', '\xC0', '\xC1', '\a', '?', 
		'\x2', '\x2', '\xC1', '<', '\x3', '\x2', '\x2', '\x2', '\xC2', '\xC3', 
		'\a', '>', '\x2', '\x2', '\xC3', '>', '\x3', '\x2', '\x2', '\x2', '\xC4', 
		'\xC5', '\a', '@', '\x2', '\x2', '\xC5', '@', '\x3', '\x2', '\x2', '\x2', 
		'\xC6', '\xC7', '\a', '<', '\x2', '\x2', '\xC7', '\x42', '\x3', '\x2', 
		'\x2', '\x2', '\xC8', '\xC9', '\a', '.', '\x2', '\x2', '\xC9', '\x44', 
		'\x3', '\x2', '\x2', '\x2', '\xCA', '\xCB', '\a', '#', '\x2', '\x2', '\xCB', 
		'\x46', '\x3', '\x2', '\x2', '\x2', '\xCC', '\xCD', '\a', '(', '\x2', 
		'\x2', '\xCD', '\xCE', '\a', '(', '\x2', '\x2', '\xCE', 'H', '\x3', '\x2', 
		'\x2', '\x2', '\xCF', '\xD0', '\a', '~', '\x2', '\x2', '\xD0', '\xD1', 
		'\a', '~', '\x2', '\x2', '\xD1', 'J', '\x3', '\x2', '\x2', '\x2', '\xD2', 
		'\xD3', '\a', '#', '\x2', '\x2', '\xD3', '\xD4', '\a', '?', '\x2', '\x2', 
		'\xD4', 'L', '\x3', '\x2', '\x2', '\x2', '\xD5', '\xD6', '\t', '\x5', 
		'\x2', '\x2', '\xD6', '\xD7', '\x3', '\x2', '\x2', '\x2', '\xD7', '\xD8', 
		'\b', '\'', '\x2', '\x2', '\xD8', 'N', '\x3', '\x2', '\x2', '\x2', '\t', 
		'\x2', 'R', 'X', ']', '\x95', '\x98', '\x9A', '\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace ll
